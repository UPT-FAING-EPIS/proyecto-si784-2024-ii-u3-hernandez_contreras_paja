name: Generate LivingDoc Report

on: 
  push:
    branches: 
      - main  
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Instalar LivingDoc CLI
      run: dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI

    - name: Agregar herramienta LivingDoc al PATH
      shell: bash
      run: echo "export PATH=\"\$PATH:\$HOME/.dotnet/tools\"" >> $GITHUB_ENV

    - name: Instalar dependencias de Python
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install xmltodict

    - name: Restaurar dependencias
      working-directory: ProyectoAsistencia/ProyectoAsistencia.Tests
      run: dotnet restore ProyectoAsistencia.Tests.csproj

    - name: Compilar proyecto de pruebas
      working-directory: ProyectoAsistencia/ProyectoAsistencia.Tests
      run: dotnet build ProyectoAsistencia.Tests.csproj --configuration Debug

    - name: Ejecutar pruebas y generar archivo TRX
      working-directory: ProyectoAsistencia/ProyectoAsistencia.Tests
      run: dotnet test --filter FullyQualifiedName~HomeFeature --logger "trx;LogFileName=TestResults/TestResults.trx"

    - name: Convertir TRX a JSON
      working-directory: ProyectoAsistencia/ProyectoAsistencia.Tests
      run: python3 TestResults/trx_to_json.py TestResults/TestResults.trx TestResults/TestResults.json

    - name: Generar Reporte de LivingDoc
      working-directory: ProyectoAsistencia/ProyectoAsistencia.Tests
      run: |
        mkdir -p ../public
        livingdoc test-assembly ./bin/Debug/net8.0/ProyectoAsistencia.Tests.dll -t TestResults/TestResults.json -o ../public/LivingDocReport.html

    - name: Validar si LivingDocReport.html fue generado
      working-directory: ProyectoAsistencia/ProyectoAsistencia.Tests
      run: |
        if [ ! -f "../public/LivingDocReport.html" ]; then
          echo "Error: LivingDocReport.html no se generó correctamente."
          exit 1
        fi

    - name: Configurar Git para la publicación en GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: | 
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        
        # Crear directorio público si no existe
        mkdir -p public

        # Copiar el reporte generado
        cp -r ProyectoAsistencia/public/* public/

        # Publicar en gh-pages
        git fetch origin
        git checkout -B gh-pages
        git add public/*
        git commit -m "Add LivingDoc report"
        git push origin gh-pages --force
