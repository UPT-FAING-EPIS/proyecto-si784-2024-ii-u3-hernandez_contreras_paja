name: Generar y Publicar LivingDoc Report

on: 
  push:
    branches: 
      - main  
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Instalar herramientas necesarias
      run: |
        dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
        echo "export PATH=\"\$PATH:\$HOME/.dotnet/tools\"" >> $GITHUB_ENV
        python3 -m pip install --upgrade pip
        python3 -m pip install xmltodict

    - name: Restaurar dependencias y compilar proyecto
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        dotnet restore
        dotnet build --configuration Debug

    - name: Ejecutar pruebas y generar archivo TRX
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        dotnet test --filter FullyQualifiedName~HomeFeature --logger "trx;LogFileName=TestResults/TestResults.trx"

    - name: Ejecutar script Python para procesar TRX
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        python3 script.py TestResults/TestResults.trx output.json

    - name: Generar reporte de LivingDoc
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        mkdir -p Reports/LivingDoc
        livingdoc test-assembly ./bin/Debug/net8.0/ProyectoAsistencia.Tests.dll -t TestResults/TestResults.json -o Reports/LivingDoc/LivingDocReport.html

    - name: Mover reporte a carpeta de publicación
      run: |
        mkdir -p ReportesGH
        cp ProyectoAsistencia/ProyectoAsistencia.Tests/Reports/LivingDoc/LivingDocReport.html ReportesGH/
      
    - name: Verificar contenido de ReportesGH
      run: |
        ls -R ReportesGH || echo "ReportesGH está vacío"

    - name: Publicar reporte en GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

        # Guardar carpeta ReportesGH temporalmente
        mv ReportesGH /tmp/ReportesGH

        # Configurar la rama gh-pages
        git fetch origin gh-pages || git checkout --orphan gh-pages
        git checkout gh-pages || git checkout --orphan gh-pages
        git rm -rf .  # Limpiar todo el contenido

        # Mover los reportes de nuevo a la raíz
        mv /tmp/ReportesGH/* .

        # Subir el contenido
        git add .
        git commit -m "Actualizar reporte LivingDoc" || echo "No hay cambios que confirmar"
        git push origin gh-pages --force
