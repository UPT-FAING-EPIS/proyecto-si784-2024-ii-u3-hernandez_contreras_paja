name: Pruebas y Publicación en GitHub Pages

on: 
  push:
    branches: 
      - main  
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Ejecutar pruebas y recolectar cobertura y mutaciones
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests  
        dotnet test --collect:"XPlat Code Coverage"

        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator "-reports:TestResults/**/coverage.cobertura.xml" "-targetdir:Reports/Cobertura" -reporttypes:HTML
      continue-on-error: true

    - name: Instalar herramientas necesarias
      run: |
        dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
        echo "export PATH=\"\$PATH:\$HOME/.dotnet/tools\"" >> $GITHUB_ENV
        python3 -m pip install --upgrade pip
        python3 -m pip install xmltodict

        cd ProyectoAsistencia/ProyectoAsistencia.Tests

        livingdoc test-assembly ./bin/Debug/net8.0/ProyectoAsistencia.Tests.dll -t TestResults/TestResults.json -o Reports/LivingDoc/LivingDocReport.html

    - name: Análisis de seguridad con Snyk
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        snyk container test ProyectoAsistencia --json | snyk-to-html -o Reports/Snyk/container-test-results.html

    - name: Mover a carpeta
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        dotnet tool install -g dotnet-stryker
        dotnet stryker

        mkdir -p ../../ReportesGH
        # Copiar reporte de mutaciones
        if [ -d "StrykerOutput" ]; then
          latest_folder=$(ls -td StrykerOutput/* | head -n 1)
          cp "$latest_folder/reports/mutation-report.html" ../../ReportesGH/ || echo "No Stryker report found"
        fi

        # Copiar reportes adicionales
        cp Reports/Cobertura/index.html ../../ReportesGH/ || echo "No coverage report found"
        cp Reports/Cobertura/report.css ../../ReportesGH/ || echo "No coverage report found"
        cp Reports/LivingDoc/LivingDocReport.html ../../ReportesGH/ || echo "No LivingDoc report found"
        cp Reports/Snyk/container-test-results.html ../../ReportesGH/ || echo "No Snyk report found"
        
    - name: Verificar contenido de ReportesGH
      run: |
        ls -R ReportesGH || echo "ReportesGH is empty"

    - name: Publicar reportes en GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

        mv ReportesGH /tmp/ReportesGH

        git fetch origin gh-pages || git checkout --orphan gh-pages
        git checkout gh-pages || git checkout --orphan gh-pages
        git rm -rf .

        mv /tmp/ReportesGH/* .

        git add .
        git commit -m "Actualizar reportes de pruebas, mutaciones y seguridad" || echo "No hay cambios que confirmar"
        git push origin gh-pages --force
